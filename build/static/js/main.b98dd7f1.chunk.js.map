{"version":3,"sources":["APIKEY.js","Api/api.js","Actions/actionTypes.js","Actions/index.js","Components/GameGrid.js","Components/SideBar.js","Components/Main.js","Components/SingleGame.js","Components/WishList.js","App.js","serviceWorker.js","Reducers/getAllGames.js","Reducers/getSingleGame.js","Reducers/getSingleGameCover.js","Reducers/editWishList.js","Reducers/Index.js","index.js"],"names":["API_key","BASE_URL","GamesApi","getAllGames","query","search","_url","concat","axios","url","baseURL","method","headers","Accept","user-key","API_KEY","data","then","response","console","log","catch","err","error","getGame","id","idQuery","getGameCover","LOAD_GAMES_SUCCESS","LOAD_SINGLEGAME_SUCCESS","LOAD_SINGLEGAMECOVER_SUCCESS","ADD_WISHLIST","REMOVE_WISHLIST_ITEM","errorMessage","type","loadGameSuccess","games","types","inputValue","dispatch","gamesApi","loadSingleGameSuccess","game","loadSingleGameCoverSuccess","getSingleGame","length","cover","getSingleGameCover","addItemToWishList","briefGameInfo","removeItemFromWishList","GameGrid","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","status","isFetching","gameList","react_default","a","createElement","map","key","className","Link","to","name","summary","Component","SideBar","icon","theme","Search","Input","Main","keyWord","actions","_this2","gameGrid","Components_GameGrid","row","col","span","Components_SideBar","placeholder","onSearch","value","enterButton","connect","allGames","bindActionCreators","currentId","match","params","rating","platforms","gameDetails","popularity","toFixed","gameCover","src","alt","es_button","onClick","addWishListClick","singleGame","singleGameCover","WishList","wish_list","wishlist","item","index","removeWishListClick","App","title","Route","exact","path","component","SingleGame","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initialState","rootReducer","combineReducers","arguments","undefined","action","objectSpread","isFeching","toConsumableArray","filter","store","createStore","applyMiddleware","thunk","render","react_redux_es","BrowserRouter","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b98dd7f1.chunk.js","sourcesContent":["\r\nconst API_key = '67f00bcb5bf60222649c907a7d052523';\r\n\r\nexport default API_key","import API_KEY from '../APIKEY';\r\nimport axios from 'axios';\r\nconst BASE_URL = 'https://cors-anywhere.herokuapp.com/https://api-v3.igdb.com';\r\nclass GamesApi {\r\n  /**\r\n     * Do an API call to the search API endpoint.\r\n     * @returns {Promise<any>}\r\n     */\r\n  static getAllGames = (query) => {\r\n    //console.log(query)\r\n    let search = null;\r\n    let _url = null;\r\n    if (query === \"\") {\r\n      _url = \"/games\";\r\n      search = '';\r\n    } else {\r\n      _url = \"/search\";\r\n      search = \"search \" + `\"${query}\"` + \";\";\r\n    }\r\n\r\n    return axios({\r\n      url: _url,\r\n      baseURL: BASE_URL,\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'user-key': API_KEY\r\n      },\r\n      data: 'fields *;' + search + ' limit 20;'\r\n    })\r\n      .then(response => {\r\n        console.log(response.data);\r\n        return response.data;\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  static getGame = (id) => {\r\n    let idQuery = \"where id = \" + `${id}` + \";\";\r\n    return axios({\r\n      url: \"/games\",\r\n      baseURL: BASE_URL,\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'user-key': API_KEY\r\n      },\r\n      //if need more info about game attribute, go to https://api-docs.igdb.com/, you can add elements follow the API doc\r\n      data: \"fields *;\" + idQuery\r\n    })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        return response.data;\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      })\r\n\r\n\r\n  }\r\n\r\n  static getGameCover = (id) => {\r\n    let idQuery = \"where id = \" + `${id}` + \";\";\r\n    return axios({\r\n      url: \"/covers\",\r\n      baseURL: BASE_URL,\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'user-key': API_KEY\r\n      },\r\n      //if need more info about game attribute, go to https://api-docs.igdb.com/, you can add elements follow the API doc\r\n      data: \"fields alpha_channel,animated,game,height,image_id,url,width;\" + idQuery\r\n    })\r\n      .then(response => {\r\n        console.log(response.data);\r\n        return response.data;\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      })\r\n\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default GamesApi;\r\n\r\n\r\n  // Hi, I find that the POST request for enabling CORS is Invalid, always got 404. I think another user has the same problem as me but got no answer in Discard. Do you have any solution for this? Thanks a lot\r\n\r\n","export const LOAD_GAMES_SUCCESS = 'LOAD_GAMES_SUCCESS';\r\nexport const LOAD_SINGLEGAME_SUCCESS = 'LOAD_SINGLEGAME_SUCCESS';\r\nexport const LOAD_SINGLEGAMECOVER_SUCCESS = 'LOAD_SINGLEGAMECOVER_SUCCESS'\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_OUT = 'LOG_OUT';\r\nexport const ERROR_MESSAGE = 'ERROR_MESSAGE'\r\nexport const ADD_WISHLIST = 'ADD_WISHLIST'\r\nexport const REMOVE_WISHLIST_ITEM = 'REMOVE_WISHLIST_ITEM'\r\n","import gamesApi from '../Api/api'\r\nimport * as types from './actionTypes'\r\n\r\n\r\n// the currently visible error message.\r\nexport const errorMessage = () => ({\r\n    type: types.ERROR_MESSAGE\r\n})\r\n\r\n//load search results action\r\nexport function loadGameSuccess(games) {\r\n    return {\r\n        type: types.LOAD_GAMES_SUCCESS, games\r\n    };\r\n}\r\n\r\nexport function getAllGames(inputValue) {\r\n    //console.log(inputValue)\r\n    return function (dispatch) {\r\n        gamesApi.getAllGames(inputValue).then(games => {\r\n            dispatch(loadGameSuccess(games));\r\n        }).catch(error => {\r\n            dispatch(errorMessage)\r\n            throw (error);\r\n            \r\n        });\r\n    }\r\n}\r\n\r\nexport function loadSingleGameSuccess(game) {\r\n    return {\r\n        type: types.LOAD_SINGLEGAME_SUCCESS, game\r\n    };\r\n}\r\n\r\nexport function loadSingleGameCoverSuccess(game) {\r\n    return {\r\n        type: types.LOAD_SINGLEGAMECOVER_SUCCESS, game\r\n    };\r\n}\r\n\r\nexport function getSingleGame(id) {\r\n    return function (dispatch) {\r\n        gamesApi.getGame(id).then(game => {\r\n            console.log(game,'game')\r\n            dispatch(loadSingleGameSuccess(game));\r\n            if (game.length > 0 && game[0].cover) {\r\n                dispatch(getSingleGameCover(game[0].cover))\r\n            }\r\n        }).catch(error => {\r\n            dispatch(errorMessage);\r\n            throw (error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function getSingleGameCover(id) {\r\n    return function (dispatch) {\r\n        gamesApi.getGameCover(id).then(game => {\r\n            console.log(game,'cover')\r\n            dispatch(loadSingleGameCoverSuccess(game));\r\n        }).catch(error => {\r\n            dispatch(errorMessage);\r\n            throw (error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function addItemToWishList(briefGameInfo){\r\n    return{\r\n        type:types.ADD_WISHLIST,briefGameInfo\r\n    };\r\n}\r\n\r\nexport function removeItemFromWishList(briefGameInfo){\r\n    return{\r\n        type:types.REMOVE_WISHLIST_ITEM,briefGameInfo\r\n    };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport \"../Styles/gamegrid.css\";\r\n\r\nclass GameGrid extends Component {\r\n\r\n  static propTypes = {\r\n    games: PropTypes.array.isRequired,\r\n    isFetching: PropTypes.string.isRequired\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: this.props.isFetching\r\n    }\r\n\r\n  }\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    let gameList = null;\r\n    switch (this.state.status) {\r\n      case \"LOADING\":\r\n        gameList = <em>Loading...</em>;\r\n        break;\r\n      case \"LOADED\":\r\n        gameList = this.props.games && this.props.games.map(game => {\r\n          return (\r\n            // set card styles here, add any thing you need in this div\r\n            //{pathname:\"/GameDetails\",search:`${game.id}`}\r\n            <div key={game.id} className=\"game-item\">\r\n              <Link to={`/GameDetails/${game.id}`} className=\"game-name\">{game.name}</Link>\r\n              <p>{game.summary}</p>\r\n            </div>\r\n          )\r\n        });\r\n        break;\r\n      default:\r\n        gameList = <b>Failed to load data, please try again</b>;\r\n        break;\r\n\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"GameCard\">\r\n          <h1>Game List </h1>\r\n          {gameList}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default GameGrid;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Icon } from \"antd\";\r\nimport \"../Styles/sidebar.css\";\r\n\r\nclass SideBar extends Component{\r\n\r\n  render() {\r\n    return (\r\n      <div className='sidebar'>\r\n        {/* <h1>\r\n          this is SideBar\r\n        </h1> */}\r\n        <div className='sidebar-list'>\r\n        <Icon type=\"home\" theme=\"twoTone\" />\r\n        <Link to=\"/\" > Home</Link><br/><br/>\r\n\r\n        <Icon type=\"star\" theme=\"twoTone\" />\r\n        <Link to=\"/WishList\"> WishList</Link><br/>\r\n        {/* <Link to=\"/WishList\"> Playing</Link><br/>\r\n        <Link to=\"/WishList\"> Plan to play</Link><br/>\r\n        <Link to=\"/WishList\"> Played</Link><br/> */}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default SideBar;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n//import { Link } from 'react-router-dom';\r\nimport { Input, Row, Col } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"../Styles/main.css\";\r\n\r\nimport * as actions from \"../Actions/index\";\r\nimport GameGrid from \"./GameGrid\";\r\nimport SideBar from \"./SideBar\";\r\n\r\nconst Search = Input.Search;\r\n\r\nclass Main extends Component {\r\n  static propTypes = {\r\n    isFetching: PropTypes.string.isRequired,\r\n    games: PropTypes.array.isRequired\r\n    // Injected by React Router\r\n    //children: PropTypes.node\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: this.props.isFetching,\r\n      keyWord: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.state.keyWord);\r\n    this.props.actions.getAllGames(`${this.state.keyWord}`);\r\n    //console.log(this.props.allGames)\r\n  }\r\n\r\n  render() {\r\n    let gameGrid = null;\r\n    switch (this.props.isFetching) {\r\n      case \"LOADING\":\r\n        gameGrid = <em>Loading...</em>;\r\n        break;\r\n      case \"LOADED\":\r\n        gameGrid = (\r\n          <div>\r\n            <GameGrid\r\n              games={this.props.games}\r\n              isFetching={this.props.isFetching}\r\n            />\r\n          </div>\r\n        );\r\n        break;\r\n      default:\r\n        gameGrid = <b>Failed to load data, please try again</b>;\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col span={6}>\r\n            <SideBar />\r\n          </Col>\r\n          <Col span={18}>\r\n            <Search\r\n              className=\"search-input\"\r\n              placeholder=\"input search text\"\r\n              onSearch={value => this.props.actions.getAllGames(value)}\r\n              enterButton\r\n            />\r\n            {gameGrid}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state.allGames.games);\r\n  //console.log(state.allGames.isFetching)\r\n  return {\r\n    isFetching: state.allGames.isFetching,\r\n    games: state.allGames.games\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    actions: bindActionCreators(actions, dispatch)\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Main);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Button, Row, Col } from \"antd\";\r\nimport \"../Styles/singlegame.css\";\r\n\r\n// import \"antd/dist/antd.css\";\r\nimport * as actions from \"../Actions/index\";\r\nimport SideBar from \"./SideBar\";\r\n\r\nclass GameGrid extends Component {\r\n  static propTypes = {\r\n    game: PropTypes.object.isRequired,\r\n    gameCover: PropTypes.string.isRequired,\r\n    isFetching: PropTypes.string.isRequired\r\n    // Injected by React Router\r\n    //children: PropTypes.node\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentId: this.props.match.params.id\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    console.log(this.state.currentId);\r\n    this.props.actions.getSingleGame(`${this.state.currentId}`);\r\n    //this.props.actions.getSingleGameCover('30672')\r\n  }\r\n\r\n  addWishListClick() {\r\n    let briefGameInfo = {\r\n      id: this.state.currentId,\r\n      name: this.props.game.name,\r\n      rating: this.props.game.rating,\r\n      platforms: this.props.game.platforms\r\n    };\r\n    this.props.actions.addItemToWishList(briefGameInfo);\r\n  }\r\n\r\n  render() {\r\n    let gameDetails = null;\r\n    switch (this.props.isFetching) {\r\n      case \"LOADING\":\r\n        gameDetails = <em>Loading...</em>;\r\n        break;\r\n      case \"LOADED\":\r\n        //edit all the elements and layout of gamedetails card here\r\n        gameDetails = (\r\n          <div className=\"game-detail-card\">\r\n            <Row>\r\n              <Col span={16}>\r\n                <div className=\"game-summary\">\r\n                  <h2>Summary:</h2>\r\n                  {this.props.game.summary && <p>{this.props.game.summary}</p>}\r\n                </div>\r\n              </Col>\r\n              <Col span={8}>\r\n                <h2>Popularity:</h2>\r\n                {this.props.game.popularity && (\r\n                  <p className=\"game-popularity\">\r\n                    {this.props.game.popularity.toFixed(2)}\r\n                  </p>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        );\r\n        break;\r\n      default:\r\n        gameDetails = <b>Failed to load data, please try again</b>;\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col span={6}>\r\n            <SideBar />\r\n          </Col>\r\n\r\n          <Col span={18}>\r\n            <Link to=\"/\" className=\"back-to\">\r\n              Back to Search\r\n            </Link>\r\n            <div className=\"game-content\">\r\n              {/* <h1 className=\"single-game-title\">this is game: {this.state.currentId}</h1> */}\r\n              {this.props.game.name && (\r\n                <h1 className=\"single-game-title\">{this.props.game.name} </h1>\r\n              )}\r\n              <Row>\r\n                <Col span={8}>\r\n                  {this.props.gameCover && (\r\n                    <img\r\n                      className=\"game-cover\"\r\n                      src={this.props.gameCover}\r\n                      alt={this.props.game.name}\r\n                    />\r\n                  )}\r\n                </Col>\r\n                <Col span={16}>{gameDetails}</Col>\r\n              </Row>\r\n              {this.props.game.name && (\r\n                <Button type=\"primary\" onClick={() => this.addWishListClick()}>\r\n                  Add to Wishlist\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  //console.log(state.singleGame)\r\n  //console.log(state.singleGame.isFetching)\r\n  //console.log(state.wishlist)\r\n  return {\r\n    //wishlist:state.wishlist,\r\n    isFetching: state.singleGame.isFetching,\r\n    game: state.singleGame.game,\r\n    gameCover: state.singleGameCover.gameCover\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    actions: bindActionCreators(actions, dispatch)\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(GameGrid);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Button, Row, Col } from \"antd\";\r\n\r\nimport * as actions from \"../Actions/index\";\r\nimport SideBar from \"./SideBar\";\r\nimport \"../Styles/wishlist.css\";\r\n\r\nclass WishList extends Component {\r\n  static propTypes = {\r\n    wishlist: PropTypes.array.isRequired\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidMount() {}\r\n\r\n  removeWishListClick(id) {\r\n    this.props.actions.removeItemFromWishList(id);\r\n  }\r\n\r\n  render() {\r\n    let wish_list = null;\r\n    //why if statement not working?\r\n    if (this.props.wishlist === []) {\r\n      wish_list = (\r\n        <div>\r\n          <h1>it's empty</h1>\r\n        </div>\r\n      );\r\n    } else {\r\n      wish_list = this.props.wishlist.map((item, index) => {\r\n        return (\r\n          //Need a table here to list all games\r\n          <div key={index} className=\"wish-item\">\r\n            {/* a example of remove item from list, you can move this function to the place you want */}\r\n            <Row>\r\n              <Col span={20}>\r\n                <h2>{item.name}</h2>\r\n              </Col>\r\n              <Col span={4}>\r\n                <Button\r\n                  type=\"primary\"\r\n                  onClick={() => this.removeWishListClick(item.id)}\r\n                >\r\n                  remove\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div className=\"wish-list\">\r\n        <Row>\r\n          <Col span={6}>\r\n            <SideBar />\r\n          </Col>\r\n          <Col span={18}>\r\n            <h1>My Wish List</h1>\r\n            {wish_list}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state.wishlist.wishlist);\r\n  return {\r\n    wishlist: state.wishlist.wishlist\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    actions: bindActionCreators(actions, dispatch)\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(WishList);\r\n","import React, { Component } from 'react';\r\n\r\n// import react router deps\r\nimport { Route } from 'react-router-dom';\r\n\r\n// Import Components\r\nimport Main from './Components/Main';\r\nimport SingleGame from './Components/SingleGame';\r\nimport WishList from './Components/WishList'\r\n// import GameGrid from './Components/GameGrid';\r\n\r\nimport './Styles/App.css';\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"Game Holic\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <h1 className=\"App-title\">{this.state.title}</h1>\r\n        </header>\r\n        {/* Rended diffrent component based on the path */}\r\n\r\n        <Route exact path=\"/\" component={Main} />\r\n        <Route path=\"/GameDetails/:id\" component={SingleGame}/>\r\n        <Route path=\"/WishList\" component={WishList}/>\r\n      </div>\r\n\r\n\r\n\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","\r\n\r\nconst initialState = {\r\n  games: [],\r\n  isFetching: \"LOADING\"\r\n}\r\n\r\nexport default function getAllGamesReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'LOAD_GAMES_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isFetching: \"LOADED\",\r\n        games: action.games\r\n      }\r\n    case 'ERROR_MESSAGE':\r\n      return {\r\n        ...state,\r\n        isFeching: \"ERROR\"\r\n      }\r\n    default:\r\n      return state\r\n\r\n  }\r\n\r\n}\r\n","const initialState = {\r\n  game: {},\r\n  isFetching:\"LOADING\"\r\n}\r\n\r\nexport default function getSingleGameReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'LOAD_SINGLEGAME_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isFetching: \"LOADED\",\r\n        game: action.game.length > 0 ? action.game[0] : {}\r\n      }\r\n    case 'ERROR_MESSAGE':\r\n      return {\r\n        ...state,\r\n        isFeching: \"ERROR\"\r\n      }\r\n    default:\r\n      return state\r\n\r\n  }\r\n}","const initialState = {\n    gameCover: '',\n    isFetching:\"LOADING\"\n  }\n  \n  export default function getSingleGameCoverReducer(state = initialState, action) {\n    switch (action.type) {\n      case 'LOAD_SINGLEGAMECOVER_SUCCESS':\n        return {\n          ...state,\n          isFetching: \"LOADED\",\n          gameCover: action.game[0].url\n        }\n      case 'ERROR_MESSAGE':\n        return {\n          ...state,\n          isFeching: \"ERROR\"\n        }\n      default:\n        return state\n  \n    }\n  }","const initialState = {\r\n    wishlist: []\r\n}\r\n\r\nexport default function editWishList(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'ADD_WISHLIST':\r\n            return {\r\n                ...state,\r\n                wishlist: [...state.wishlist, action.briefGameInfo]\r\n            }\r\n        case 'REMOVE_WISHLIST_ITEM':\r\n            return{\r\n                ...state,\r\n                wishlist:state.wishlist.filter(item => action.briefGameInfo !== item.id)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n  //types.ERROR_MESSAGE","import { combineReducers } from 'redux';\r\n//import { routerReducer } from 'react-router-redux';\r\nimport allGames from './getAllGames'\r\nimport singleGame from './getSingleGame'\r\nimport singleGameCover from './getSingleGameCover'\r\nimport wishlist from './editWishList'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    allGames,\r\n    singleGame,\r\n    singleGameCover,\r\n    wishlist\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './Styles/index.css';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n// import configureStore from './Store/configureStore';\r\nimport rootReducer from './Reducers/Index';\r\n\r\n\r\nconst store = configureStore();\r\n\r\n\r\nrender(\r\n    <Provider store={store}>\r\n        <BrowserRouter >\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\nserviceWorker.register();\r\n\r\n\r\nfunction configureStore() {\r\n  return createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n  );\r\n}\r\n"],"sourceRoot":""}